<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://yuzh0507.github.io</id>
    <title>Station of Alvin</title>
    <updated>2022-05-12T14:04:35.331Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://yuzh0507.github.io"/>
    <link rel="self" href="https://yuzh0507.github.io/atom.xml"/>
    <subtitle>Record every step of my way</subtitle>
    <logo>https://yuzh0507.github.io/images/avatar.png</logo>
    <icon>https://yuzh0507.github.io/favicon.ico</icon>
    <rights>All rights reserved 2022, Station of Alvin</rights>
    <entry>
        <title type="html"><![CDATA[LeetCode Record]]></title>
        <id>https://yuzh0507.github.io/post/leetcode-record/</id>
        <link href="https://yuzh0507.github.io/post/leetcode-record/">
        </link>
        <updated>2022-05-04T00:51:04.000Z</updated>
        <content type="html"><![CDATA[<p>In order to learn C++ programming skills, I decide to start to do exercises on <a href="https://leetcode.com/">LeetCode</a>.</p>
<h1 id="easy-problems">Easy Problems</h1>
<p><a href="https://yuzh0507.github.io/post/1-two-sum">1. Two Sum</a><br>
<a href="https://yuzh0507.github.io/post/9-palindrome-number">9. Palindrome Number</a><br>
<a href="https://yuzh0507.github.io/post/13-roman-to-integer">13. Roman to Integer</a></p>
<h1 id="medium-problems">Medium Problems</h1>
<p><a href="https://yuzh0507.github.io/post/2-add-two-numbers">2. Add Two Numbers</a><br>
<a href="https://yuzh0507.github.io/post/3-longest-substring-without-repeating-characters">3. Longest Substring Without Repeating Characters</a><br>
<a href="https://yuzh0507.github.io/post/5-longest-palindromic-substring">5. Longest Palindromic Number</a><br>
<a href="https://yuzh0507.github.io/post/6-zigzag-conversion">6. Zigzag Conversion</a><br>
<a href="https://yuzh0507.github.io/post/7-reverse-integer">7. Reverse Integer</a><br>
<a href="https://yuzh0507.github.io/post/8-string-to-integer-atoi">8. String to Integer (atoi)</a><br>
<a href="https://yuzh0507.github.io/post/11-container-with-most-water">11. Container With Most Water</a><br>
<a href="https://yuzh0507.github.io/post/12-integer-to-roman">12. Integer to Roman</a><br>
<a href="https://yuzh0507.github.io/post/15-3sum">15. 3Sum</a></p>
<h1 id="hard-problems">Hard Problems</h1>
<p><a href="https://yuzh0507.github.io/post/10-regular-expression-matching">10. Regular Expression Matching</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[UDP Summary]]></title>
        <id>https://yuzh0507.github.io/post/udp-summary/</id>
        <link href="https://yuzh0507.github.io/post/udp-summary/">
        </link>
        <updated>2019-11-04T10:52:33.000Z</updated>
        <content type="html"><![CDATA[<h1 id="1-summary">1 Summary</h1>
<p>UDP(User Datagram Protocol) is a regular and simple protocol of the transport layer. It offers service of transmitting messages between applications.</p>
<h1 id="2-format">2 Format</h1>
<h2 id="21-udp-header">2.1 UDP Header</h2>
<figure data-type="image" tabindex="1"><img src="https://yuzh0507.github.io/post-images/1572865440084.PNG" alt="" loading="lazy"></figure>
<table>
<thead>
<tr>
<th>Field</th>
<th>Meaning</th>
</tr>
</thead>
<tbody>
<tr>
<td>Source Port</td>
<td>The transport port of sending process</td>
</tr>
<tr>
<td>Destination Port</td>
<td>The transport port of the destination of the message</td>
</tr>
<tr>
<td>Length</td>
<td>Length in octets of of this datagram including header and data</td>
</tr>
<tr>
<td>checksum</td>
<td>The 16-bit one’s complement of the one’s complement sum of a pseudo header</td>
</tr>
</tbody>
</table>
<h2 id="22-pseudo-header">2.2 Pseudo Header</h2>
<figure data-type="image" tabindex="2"><img src="https://yuzh0507.github.io/post-images/1572865765825.PNG" alt="" loading="lazy"></figure>
<p>The pseudo header includes IP address in addition to UDP information. The specific implementation will be discussed in next update.</p>
<h1 id="3-user-interface">3 User Interface</h1>
<p>A user interface should allow:</p>
<ul>
<li>The creation of new receive ports,</li>
<li>receive operations on the receive ports that return the data octets and an indication of source port and source address,</li>
<li>an operation that allows a datagram to be sent, specifying the data, source and destination ports and addresses to be sent.</li>
</ul>
<h1 id="4-ip-interface">4 IP Interface</h1>
<p>The UDP module must be able to determine the source and destination internet addresses and the protocol field from the internet header. One possible UDP/IP interface would return the whole internet datagram including all of the internet header in response to a receive operation. Such an interface would also allow the UDP to pass a full internet datagram complete with header to the IP to send. The IP would verify certain fields for consistency and compute the internet header checksum.</p>
<h1 id="5-ports">5 Ports</h1>
<p>The UDP well-known ports is identical to TCP well-known ports. Some frequently used ports are showned as below.</p>
<table>
<thead>
<tr>
<th>Port Number</th>
<th>Application Protocol</th>
</tr>
</thead>
<tbody>
<tr>
<td>53</td>
<td>DNS</td>
</tr>
<tr>
<td>67, 68</td>
<td>DHCP</td>
</tr>
</tbody>
</table>
<h1 id="6-implementation-in-automotive-ethernet">6 Implementation in Automotive Ethernet</h1>
<h2 id="61-application-scenarios">6.1 Application Scenarios</h2>
<p>Most messages within the automotive Environment are considerably important which need reliable service provided by the transport layer. Since the UDP is good at speed but not reliable, the utilization shall be deliberated by designers.</p>
<h2 id="62-length">6.2 Length</h2>
<p>Since the MTU of automotive Ethernet is constantly 1500 Bytes, designers may forbid the fragmenation of IP. In this case, The length of UDP messages shall be limited to fulfill the limitation of MTU.</p>
]]></content>
    </entry>
</feed>